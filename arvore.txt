class NodoArvore:
    def __init__(self, chave=None, esquerda=None, direita=None):
        self.chave = chave
        self.esquerda = esquerda
        self.direita = direita

    def __repr__(self):
        return '%s <- %s -> %s' % (self.esquerda and self.esquerda.chave,
                                    self.chave,
                                    self.direita and self.direita.chave)
                                    
                            
def em_ordem(raiz):
    if not raiz:
        return

    em_ordem(raiz.esquerda)

    print(raiz.chave),

    em_ordem(raiz.direita)  
    
def insere(raiz, nodo):
    if raiz is None:
        raiz = nodo
    elif raiz.chave < nodo.chave:
        if raiz.direita is None:
            raiz.direita = nodo
        else:
            insere(raiz.direita, nodo)

    else:
        if raiz.esquerda is None:
            raiz.esquerda = nodo
        else:
            insere(raiz.esquerda, nodo)


raiz = NodoArvore(15)
for chave in [6, 18, 3, 7, 16, 20, 4]:
    nodo = NodoArvore(chave)
    insere(raiz, nodo)
em_ordem(raiz)